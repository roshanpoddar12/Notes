createdAt: "2021-03-06T11:44:16.136Z"
updatedAt: "2021-03-06T11:47:42.815Z"
type: "MARKDOWN_NOTE"
folder: "b10fb8759ad52fb9d741"
title: "Padding a String"
tags: []
content: '''
  ## Padding a String
  ES8 introduces two string handling functions for padding a string. These functions can be used to add space or any desired set of characters to the beginning and end of a string value.
  
  ### String. padStart()
  This function pads the current string with a given input string repeatedly from the start, till the current string reaches the given length. The syntax of the padStart() function is given below −
  ```js
  Syntax
  
  string_value.padStart(targetLength [, padString])
  
  ```
  The padStart() function accepts two parameters which are as follows −
  
  - targetLength − A numeric value that represents the target length of the string after padding. If the value of this parameter is lesser than or equal to the existing length of the string, the string value is returned as it is.
  
  - padString − This is an optional parameter. This parameter specifies the characters that should be used to pad the string. The string value is padded with spaces if no value is passed to this parameter.
  
  Example
  The following example declares a string variable, product_cost. The variable will be padded with zeros from left until the total length of the string is seven. The example also illustrates behaviour of the padStart() function, if no value is passed to the second parameter.
  ```js
  //pad the String with 0
     let product_cost = '1699'.padStart(7,0)
     console.log(product_cost)
     console.log(product_cost.length)
  
     //pad the String with blank spaces
     let product_cost1 = '1699'.padStart(7)
     console.log(product_cost1)
     console.log(product_cost1.length)
  </script>
  
  The output of the above code will be as stated below −
  
  0001699
  7
  1699
  7
  ```
  #### String.padEnd()
  This function pads the current string with a given input string repeatedly from the end, till the current string reaches the specified length.
  
  The syntax of the padEnd() function is given below −
  ```js
  Syntax
  string_value.padEnd(targetLength [, padString])
  ```
  
  The padEnd() function accepts two parameters −
  
  targetLength − A numeric value that represents the target length of the string after padding. If the value of this parameter is lesser than or equal to the existing length of the string, the string value is returned as it is.
  
  padString − This is an optional parameter. This parameter specifies the characters that should be used to pad the string. The string value is padded with spaces if no value is passed to this parameter.
  
  Example
  The following example declares a string variable, product_cost. The variable will be padded with zeros from right until the total length of the string is seven. The example also illustrates behaviour of the padStart() function, if no value is passed to the second parameter.
  ```js
  <script>
  
     //pad the string with x
     let product_cost = '1699'.padEnd(7,'x')
     console.log(product_cost)
     console.log(product_cost.length)
     
     //pad the string with spaces
     let product_cost1 = '1699'.padEnd(7)
     console.log(product_cost1)
     console.log(product_cost1.length)
  </script>
  The output of the above code will be as mentioned below −
  
  1699xxx
  7
  1699
  7
  ```
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
